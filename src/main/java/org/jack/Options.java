package org.jack;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;

import javax.swing.*;
import java.awt.*;
import java.awt.event.*;

public class Options extends JFrame {
    private JPanel spotPanel;
    private JTextField jsonField;
    private JCheckBox checkBox1;
    private JButton importButton;
    private JCheckBox doAddDay;
    private JCheckBox includeTomorrowCheckBox;

    private boolean manuallySelectedCB1 = false;

    public Options(Gui gui) {
        checkBox1.addActionListener(e -> {
            gui.setDoJSON(checkBox1.isSelected());
            manuallySelectedCB1 = checkBox1.isSelected();

        });

        importButton.addActionListener(e -> {
            gui._import(jsonField.getText());

            // makes sure json is on
            checkBox1.setSelected(true);
            gui.setDoJSON(true);
            checkBox1.setEnabled(false);
        });

        includeTomorrowCheckBox.addActionListener(e -> Main.doDouble = includeTomorrowCheckBox.isSelected());
        doAddDay.addActionListener(e -> {
            if (doAddDay.isSelected()) {
                Main.dayOffset--;
            } else {
                Main.dayOffset++;
            }
        });
        jsonField.addKeyListener(new KeyAdapter() {
            @Override
            public void keyTyped(KeyEvent e) {
                if (!jsonField.getText().isEmpty()) {
                    checkBox1.setSelected(true);
                    gui.setDoJSON(true);
                    checkBox1.setEnabled(false);
                } else {
                    checkBox1.setSelected(manuallySelectedCB1);
                    checkBox1.setEnabled(true);
                }
            }
        });
    }

    public void createWindow() {
        setContentPane(spotPanel);
        setTitle("BibleTTS");
        //setDefaultCloseOperation(EXIT_ON_CLOSE);
        setSize(400, 225);
        setLocationRelativeTo(null);
        setLocationByPlatform(true);
        setVisible(true);
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        spotPanel = new JPanel();
        spotPanel.setLayout(new BorderLayout(0, 0));
        final JLabel label1 = new JLabel();
        label1.setHorizontalAlignment(0);
        label1.setText("Options and Import");
        spotPanel.add(label1, BorderLayout.NORTH);
        final JPanel panel1 = new JPanel();
        panel1.setLayout(new GridLayoutManager(2, 1, new Insets(0, 0, 0, 0), -1, -1));
        spotPanel.add(panel1, BorderLayout.CENTER);
        final JPanel panel2 = new JPanel();
        panel2.setLayout(new BorderLayout(0, 0));
        panel1.add(panel2, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        final JLabel label2 = new JLabel();
        label2.setText("Enter JSON:");
        panel2.add(label2, BorderLayout.WEST);
        jsonField = new JTextField();
        panel2.add(jsonField, BorderLayout.CENTER);
        final JPanel panel3 = new JPanel();
        panel3.setLayout(new BorderLayout(0, 0));
        panel1.add(panel3, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        final JLabel label3 = new JLabel();
        label3.setText("generate JSON?:");
        panel3.add(label3, BorderLayout.WEST);
        checkBox1 = new JCheckBox();
        checkBox1.setSelected(false);
        checkBox1.setText("");
        panel3.add(checkBox1, BorderLayout.CENTER);
        final JPanel panel4 = new JPanel();
        panel4.setLayout(new GridLayoutManager(2, 1, new Insets(0, 0, 0, 0), -1, -1));
        panel3.add(panel4, BorderLayout.EAST);
        doAddDay = new JCheckBox();
        doAddDay.setText("Offset Date -1");
        panel4.add(doAddDay, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        includeTomorrowCheckBox = new JCheckBox();
        includeTomorrowCheckBox.setText("Double Reading");
        panel4.add(includeTomorrowCheckBox, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        importButton = new JButton();
        importButton.setText("Import");
        spotPanel.add(importButton, BorderLayout.EAST);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return spotPanel;
    }

}
