package org.jack;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;

import javax.swing.*;
import java.awt.*;

public class VoiceSelector extends JFrame {
    private JPanel voiceSelectorPanel;
    private JCheckBox voice1CheckBox;
    private JCheckBox voice2CheckBox;
    private JCheckBox voice3CheckBox;
    private JCheckBox voice4CheckBox;

    public VoiceSelector() {
        // buttons
        final JCheckBox[] boxes = {voice1CheckBox, voice2CheckBox, voice3CheckBox, voice4CheckBox};
        voice2CheckBox.setSelected(true);
        voice2CheckBox.setEnabled(false);
        setVoice(2);

        voice1CheckBox.setText("Liam");
        voice2CheckBox.setText("Christopher");
        voice3CheckBox.setText("Remy");
        voice4CheckBox.setText("Florian");

        voice1CheckBox.addActionListener(e -> allBut(voice1CheckBox, boxes));
        voice2CheckBox.addActionListener(e -> allBut(voice2CheckBox, boxes));
        voice3CheckBox.addActionListener(e -> allBut(voice3CheckBox, boxes));
        voice4CheckBox.addActionListener(e -> allBut(voice4CheckBox, boxes));
    }

    private void allBut(JCheckBox c, JCheckBox[] boxes) {
        if (c.isSelected()) {
            for (JCheckBox box : boxes) {
                if (box != c) {
                    box.setSelected(false);
                    box.setEnabled(true);
                }
            }

            c.setEnabled(false);

            for (int i = 1; i <= 4; i++) {
                if (boxes[i - 1] == c) {
                    setVoice(i);
                    break;
                }
            }
        }
    }

    public void createWindow() {
        setContentPane(voiceSelectorPanel);
        setTitle("BibleTTS");
        setSize(400, 225);
        setLocationRelativeTo(null);
        setLocationByPlatform(true);
        setVisible(true);
    }

    public void setVoice(int i)
    {
        switch(i)
        {
            case 1 -> Main.voice = "en-CA-LiamNeural";
            case 2 -> Main.voice = "en-US-ChristopherNeural";
            case 3 -> Main.voice = "fr-FR-RemyMultilingualNeural";
            case 4 -> Main.voice = "de-DE-FlorianMultilingualNeural";
        }
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        voiceSelectorPanel = new JPanel();
        voiceSelectorPanel.setLayout(new BorderLayout(0, 0));
        final JLabel label1 = new JLabel();
        label1.setHorizontalAlignment(0);
        label1.setText("Voices");
        voiceSelectorPanel.add(label1, BorderLayout.NORTH);
        final JPanel panel1 = new JPanel();
        panel1.setLayout(new GridLayoutManager(2, 1, new Insets(0, 0, 0, 0), -1, -1));
        voiceSelectorPanel.add(panel1, BorderLayout.CENTER);
        final JPanel panel2 = new JPanel();
        panel2.setLayout(new GridLayoutManager(1, 2, new Insets(0, 0, 0, 0), -1, -1));
        panel1.add(panel2, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        final JPanel panel3 = new JPanel();
        panel3.setLayout(new GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        panel2.add(panel3, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        voice1CheckBox = new JCheckBox();
        voice1CheckBox.setText("Voice 1");
        panel3.add(voice1CheckBox, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JPanel panel4 = new JPanel();
        panel4.setLayout(new GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        panel2.add(panel4, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        voice2CheckBox = new JCheckBox();
        voice2CheckBox.setText("Voice 2");
        panel4.add(voice2CheckBox, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JPanel panel5 = new JPanel();
        panel5.setLayout(new GridLayoutManager(1, 2, new Insets(0, 0, 0, 0), -1, -1));
        panel1.add(panel5, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        final JPanel panel6 = new JPanel();
        panel6.setLayout(new GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        panel5.add(panel6, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        voice3CheckBox = new JCheckBox();
        voice3CheckBox.setText("Voice 3");
        panel6.add(voice3CheckBox, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JPanel panel7 = new JPanel();
        panel7.setLayout(new GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        panel5.add(panel7, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        voice4CheckBox = new JCheckBox();
        voice4CheckBox.setText("Voice 4");
        panel7.add(voice4CheckBox, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return voiceSelectorPanel;
    }

}